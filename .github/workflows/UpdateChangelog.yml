name: Update Changelog

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

jobs:
  generate-changelog:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install dependencies (gh + jq)
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

        # Install gh CLI
        type -p curl >/dev/null || sudo apt install curl -y
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
          sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
          https://cli.github.com/packages stable main" | \
          sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh -y

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Generate changelog.md from releases
      run: |
        REPO="${GITHUB_REPOSITORY#*/}"
        OWNER="${GITHUB_REPOSITORY%/*}"
      
        releases=$(gh api repos/$OWNER/$REPO/releases)

        echo "# Changelog" > changelog.md

        echo "$releases" | jq -c '.[]' | while read -r release; do
          prerelease=$(echo "$release" | jq -r '.prerelease')
          tag=$(echo "$release" | jq -r '.tag_name')

          # Skip prereleases and the "latest" tag
          if [ "$prerelease" = "true" ]; then
            continue
          fi

          name=$(echo "$release" | jq -r '.name')
          date=$(echo "$release" | jq -r '.published_at')
          body=$(echo "$release" | jq -r '.body')

          {
            echo ""
            echo "## $name ($tag) - $date"
            echo ""
            printf "%s\n\n" "$body"
          } >> changelog.md
        done

    - name: Commit changelog.md if changed
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # if ! git diff --quiet -- changelog.md; then
          git add changelog.md
          git commit -m "Auto-update changelog.md from GitHub releases"
          git push
        # else
          # echo "No changes in changelog.md. Skipping commit."
        # fi